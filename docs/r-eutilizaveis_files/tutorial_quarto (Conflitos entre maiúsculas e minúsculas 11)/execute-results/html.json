{
  "hash": "965ab97295c4f545a2d28202adb41031",
  "result": {
    "markdown": "---\ntitle: \"Mini-tutorial do Quarto no RStudio\"\nlang: pt-br\nauthor: \"Maurício Garcia de Camargo\"\ndate: \"2023-06-26\"\ntoc: true\ntoc-depth: 4\ntoc-location: left\nformat:\n  html:\n    theme: default\n    html-math-method: katex\n    code-tools: true\n    code-line-numbers: false\n    self-contained: false\nexecute:\n  warning: false\n---\n\n\n## Formatação básica \n\n#### Comentários no Quarto\n``` r\n<!-- Aqui vai o comentário -->\n```\n::: {.column-margin}\nEsse estilo de comentário é herdado do HTML e é uma porcaria. \n:::\n\n#### Novo parágrafo\n\n::: {.cell}\n\n```{.r .cell-code}\n\"Dois espaços no final da linha criam um novo parágrafo\"\n```\n\n::: {.cell-output .cell-output-stdout}\n```\n[1] \"Dois espaços no final da linha criam um novo parágrafo\"\n```\n:::\n:::\n\n\n::: {.column-margin}\n`<br>` vem do HTML e também cria um parágrafo. \n:::\n\n#### Texto:\n```r \n*Itálico*\n**Negrito**\n***Negrito e itálico***\nsuperscript^2^ / subscript~2~\n~~strikethrough~~\n```\n\n## Cabeçalhos\n``` r\n# Header 1\n## Header 2\n## Header 3\n...\n###### Header 6\n```\n\n::: {.column-margin}\nExistem várias opções do revealjs para headers. Ver depois.\n:::\n\n## Links e imagens:\n``` r\n[Quarto](https://quarto.org) #Link\n![Elefante](elephant.png)    #Imagem\n[![Elefante](elephant.png)](https://quarto.org) #Link de Imagem\n![Elephant](elephant.png){width=300}\n![Elephant](elephant.png){width=80%}\n![Elephant](elephant.png){fig-align=\"left\"}\n\nPosição absoluta:\n![](image1.png){.absolute top=200 left=0 width=\"350\" height=\"300\"}\n```\n\n## Literais\n\n#### Literais em uma linha entre crases:\n``` r\n`aqui vai literal`\n```\n\n#### Literais em mais de uma linha:\n```r\nColoque 4 crases (````) no início e no final do texto. \n```\n\n::: {.column-margin}\nÀs vezes dá um resultado meio bizarro. Coisa chata.\n:::\n\n## Listas\n```r\n* unordered list\n    + sub-item 1\n    + sub-item 2\n        - sub-sub-item 1\n\n1. ordered list\n2. item 2\n    i) sub-item 1\n         A.  sub-sub-item 1\n```\n\n## Tabelas\n\n#### Tabelas simples\n\n```r\n| Right | Left | Default | Center |\n|------:|:-----|---------|:------:|\n|  12   |  12  |    12   |    12  |\n|  123  |  123 |   123   |   123  |\n|  1    |    1 |     1   |     1  |\n```\n\n#### Tabelas com grid \n```r\n+---------------+---------------+--------------------+\n| Fruit         | Price         | Advantages         |\n+===============+===============+====================+\n| Bananas       | $1.34         | - built-in wrapper |\n|               |               | - bright color     |\n+---------------+---------------+--------------------+\n| Oranges       | $2.10         | - cures scurvy     |\n|               |               | - tasty            |\n+---------------+---------------+--------------------+\n\n: Sample grid table.\n```\n\n::: {.column-margin}\nExistem outras opções de tabelas. Esta é a mais simples.\n:::\n\n## Fórmulas\n````r\n$E = mc^{2}$ para inline\nou\n$$E = mc^{2}$$ para centro da linha\n````\n\n::: {.column-margin}\nEstas são fórmulas do Markdown. Para fórmulas mais complexas, existe o LaTeX.\n:::\n\n## Notas de margem\n``` r\n::: {.column-margin}\nWe know from *the first fundamental theorem of calculus* \n:::\n```\n\n## Diagramas\n``` r\n{mermaid}\nflowchart LR\n  A[Hard edge] --> B(Round edge)\n  B --> C{Decision}\n  C --> D[Result one]\n  C --> E[Result two]\n\nVeja em mermaid.js.org\n```\n\n::: {.column-margin}\nMermaid é uma biblioteca JS para criar diagramas online baseado numa linguagem específica. \n:::\n\n## Destaque de textos\n\n#### callout (avisos)\n``` r\n:::{.callout-note}\nNote that there are five types of callouts, including: \n`note`, `tip`, `warning`, `caution`, and `important`.\n:::\n```\n#### Blockquote\n```r\n> Bloco destacado\n```\n\n#### Blockquote mais de uma linha.\n```r\n| Line Block\n|   Spaces and newlines\n|   are preserved\n```\n::: {.column-margin}\nOs espaços e formatação são todos preservados. \n:::\n\n\n## Layouts\n\n#### Duas colunas\n```r\n:::: {.columns}\n::: {.column width=\"40%\"}\ncontents...\n:::\n::: {.column width=\"60%\"}\ncontents...\n:::\n::::\n```\n\n#### Múltiplas colunas\n```r\nDuas linhas, a primeira com 2 e a segunda com 1 gráfico, todos com o mesmo tamanho.\n::: {layout=\"[[1,1], [1]]\"}\n![Surus](surus.png)\n![Surus1](surus1.png)\n![Surus2](surus2.png)\n:::\n\nPara layout com percentuais:\n::: {layout=\"[[40,-20,40], [100]]\"}\n```\n\n## HTML - cabeçalhos\n``` r\n- Antes do html\ntoc: true\ntoc-depth: 4\ntoc-location: left\n- Depois do html\ntheme: default (Outros em https://quarto.org/docs/output-formats/html-themes.html) \nhtml-math-method: katex\ncode-tools: true\ncode-line-numbers: false\nself-contained: false\n```\n\n## Revealjs - Apresentações\n\n#### Nova página\n``` r\n--- #Três ou mais tracinhos\n## Header 2 também cria nova página\n```\n\n####hox\n::: Box ou info-box\n``` r\nasdasd\n```\n:::\n\n#### Incremental\n``` r\n- Para tudo ser incremental, no cabeçalho colocar incremental: true   \n- Para tornar uma lista particular incremental:\n::: {.incremental}\n- Eat spaghetti\n- Drink wine\n:::\n```\n\n#### Colunas múltiplas\n``` r\n:::: {.columns}\n\n::: {.column width=\"40%\"}\ncontents...\n:::\n\n::: {.column width=\"60%\"}\ncontents...\n:::\n\n::::\n```\n\n#### Footer global\n``` r\nNo cabeçalho:\nfooter: \"`Mais bonitinho com crase`\"\n```\n\n#### Footer por página\n``` r\n::: footer\nCustom footer text\n:::\n```\n\n#### Aside (tipo de footer sem referência)\n``` r\n::: aside\nSome additional commentary of more peripheral interest.\n:::\n```\n\n#### Aside (tipo de footer com referência)\n``` r\nNumera automaticamente\n- Green ^[Aqui a nota de rodapé]\n- Brown\n- Purple\n```\n\n#### Smaller fonts\n``` r\n## Slide Title {.smaller}\n```\n\n#### scrollable\n``` r\n## Slide Title {.scrollable}\n```\n\n#### Notas do apresentador\n``` r\n::: {.notes}\nSpeaker notes go here.\n:::\n```\n#### Temas\n``` r\ntheme: default\nOutros: https://quarto.org/docs/presentations/revealjs/\n```\n\n#### Slide com diferente background\n\n``` r\n## Título {background-color=\"aquamarine\"}\n```\n\n#### Texto incremental num box\n```r\n::: columns\n::: {.column .box width=\"40%\"}\n   MATERIALS AND METHODS\n\n   *Experimental design* **(condensed version)**\n\n   -   **Experimental plots were planted   with different plant communities spanning [plant diversity gradient of one, four, and 16 species]{.fragment .highlight-blue}, which were randomly chosen from the species listed (5 plant functional groups -- 19 species in total)**\n   -   [Plots were divided into three subplots]{.fragment .highlight-red}\n\n:::\n\n::: {.column width=\"56%\"}\n::: fragment\nThis is in fact a **split-plot design**!\n:::\n\n::: fragment\n:::\n:::\n:::\n```\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}