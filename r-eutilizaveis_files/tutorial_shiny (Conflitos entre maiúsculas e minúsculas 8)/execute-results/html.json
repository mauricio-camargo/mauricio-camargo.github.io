{
  "hash": "60d9cd1429e5eebeb15836f4b9724779",
  "result": {
    "markdown": "---\ntitle: \"Reprodutibilidade científica\"\nsubtitle: \"Aplicativos para web com Shiny\"\nauthor: \"Prof. Maurício Garcia de Camargo\"\ninstitute: \"Instituto de Oceanografia - FURG\" \ndate: \"2023-07-21\" #Para funcionar tem que ter o 2023-07-21 em qualquer lugar do corpo (atualmente está no footer do primeiro slide)\nlang: pt-br\ntitle-slide-attributes:\n  data-background-color: \"#6b5a59\"\nformat: \n  revealjs:\n    #Veja outros temas em https://quarto.org/docs/presentations/revealjs/themes.html\n#    theme: [serif, MeuCustom.scss]\n#    logo: img/furg4.png\n#    footer: \"`Reprodutibilidade científica`\"\n    slide-number: true\n    chalkboard: true #Muito bom para aula\n#    multiplex: false #Os alunos podem seguir com smartfone. ToDo.\n#    show-slide-number: all\n    controls: true #Não é menu. ToDo.\n#    css: [assets/sydney.css, assets/sydney-fonts.css]\n    #Sem estes css o :::box não funciona\n    css: [assets/syntax-highlight.css,assets/sydney.css, assets/custom.css,assets/sydney-fonts.css]\n\n---\n\n\n## Resumo da aula de hoje\n\n<br><br>\n\n::: box\n::: incremental\n- Momento 1: O que é um aplicativo para web.\n- Momento 2: O que é `Shiny`?  \n- Momento 3: Quais recursos o `Shiny` possui?  \n- Momento 4: Construindo um aplicativo `Shiny`.  \n- Momento 5: UI (User Interface).\n- Momento 6: Códigos do server e outputs.\n- Momento 7: Exemplos complexos de aplicativos em `Shiny`.\n- Momento 8: Comnunidades de `Shiny` na internet.\n:::\n:::\n\n::: footer\n\n::: {.cell}\n\n:::\n\n:::\n\n## 1. O que é um aplicativo da web?\n\n<br>\n\n::: fragment\nUm aplicativo da web é um software que roda em um servidor remoto e interage com o usuário através de um browser.  \n:::\n\n<br>\n\n::: fragment\nO software é dividido entre UI (User Interface), que corresponde ao frontend, e códigos do servidor, que corresponde ao backend.\n:::\n\n<br>\n\n::: fragment\nUma das vantagens de um aplicativo web é que não há a necessidade de instalação do software na máquina do usuário. Todo o processamento é feito remotamente e devolvido para o browser.\n:::\n\n## 2. O que é `Shiny`?\n\n<br>\n\n::: fragment\n`Shiny` é um framework para a criação de aplicativos da web que usa códigos do R, que são interativos e reativos, ou seja, obedecem a controles manipulados pelo usuário e mostram um output na tela.\n:::\n\n<br>\n\n::: fragment\n`Shiny` é capaz de criar aplicativos complexos de forma muito simples, que de outra maneira demandaria muito tempo para serem construídos em JavaScript e HTML.\n:::\n\n<br>\n\n::: fragment\nPara aprender `Shiny`, basta ter uma boa noção de códigos em R.\n:::\n\n## 3. Quais recursos o `Shiny` possui? {.smaller}\n\n::: incremental\n- Fácil de usar e aprender.\n- O tempo do desenvolvimento é minimizado.\n- Excelente ferramenta para visualização de dados.\n- Tem um apoio forte da linguagem R.\n- Cria aplicativos da web úteis com apenas algumas linhas de códigos.\n- Funciona em qualquer ambiente R (Console do R ou RStudio).\n- É possível enriquecer o layout dos aplicativos usando HTML ou CSS.\n- Os aplicativos `Shiny` são “ativos” automaticamente. As saídas mudam instantaneamente conforme os usuários modificam as entradas, sem a necessidade de recarregar o navegador.\n:::\n\n## 4. Construindo um aplicativo Shiny. {.smaller}\n\nNão é necessário instalar nada no RStudio para usar o Shiny atualmente. Versões mais antigas do RStudio precisam instalar o pacote e carregá-lo:\n\n<br>\n\n```r\n# install.packages('shiny')\n# library(shiny)\n```\n\n<br>\n\n::: fragment\nNo RStudio, para criar novo app da web, use:\n```r\n# File>New file>Shiny web app\n```\n:::\n\n<br>\n\n::: fragment\nA estrutura do novo arquivo vem com um exemplo de app pronto. No entanto, a estrutura mais básica de um app é a seguinte: \n\n```default\nlibrary(shiny)\nui <- fluidPage(\n   'Hello, world!'\n)\nserver <- function(input, output, session) {\n}\nshinyApp(ui = ui, server = server)\n```\n:::\n\n## 5. UI (User Interface)\n\nShiny traz uma série de controles (widgets) para a construção de UI:\n\n![](img/shiny1.png)\n\n\n## 6. Códigos do server e outputs.\n\n<br>\n\nOs códigos do server são usados para capturar os inputs da UI e realizar os cáculos necessários, que serão devolvidos ao usuário na seção output.\n\n::: fragment\nNesta parte entram basicamente códigos do R e qualquer background poderá aproveitado.\n:::\n\n## 8. Exemplos em `Shiny` no RStudio.\n\n<br>\n\nA seguir, aplicatitivos da web feitos no RStudio e exemplos de utilização.\n\n## 8. Exemplos mais complexos de aplicativos em `Shiny` e referências.\n\n<br>\n\n- [Tabela básica](https://shiny.posit.co/r/gallery/widgets/basic-datatable/)\n\n- [Galeria de widgets](https://shiny.posit.co/r/gallery/widgets/widget-gallery/)\n\n- [Widgets dinÂmicos](https://shiny.posit.co/r/gallery/dynamic-user-interface/dynamic-ui/)\n\n- [Múltiplas distribuições](https://shiny.posit.co/r/gallery/application-layout/tabsets/)\n\n\n-  [Gráfico de bolhas](https://gallery.shinyapps.io/182-google-charts/)\n\nReferência do Shiny\n\n\n- [Shiny - livro Oficial](https://docs.posit.co/shinyapps.io/?_gl=1*1o9vcl2*_ga*MzkxOTEwNC4xNjg5MTIxMDMx*_ga_HXP006LBGY*MTY4OTY0Mzc2NC41LjEuMTY4OTY0Mzg5NC4wLjAuMA..)\n\n\n",
    "supporting": [],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-after-body": [
        "\n<script>\n  // htmlwidgets need to know to resize themselves when slides are shown/hidden.\n  // Fire the \"slideenter\" event (handled by htmlwidgets.js) when the current\n  // slide changes (different for each slide format).\n  (function () {\n    // dispatch for htmlwidgets\n    function fireSlideEnter() {\n      const event = window.document.createEvent(\"Event\");\n      event.initEvent(\"slideenter\", true, true);\n      window.document.dispatchEvent(event);\n    }\n\n    function fireSlideChanged(previousSlide, currentSlide) {\n      fireSlideEnter();\n\n      // dispatch for shiny\n      if (window.jQuery) {\n        if (previousSlide) {\n          window.jQuery(previousSlide).trigger(\"hidden\");\n        }\n        if (currentSlide) {\n          window.jQuery(currentSlide).trigger(\"shown\");\n        }\n      }\n    }\n\n    // hookup for slidy\n    if (window.w3c_slidy) {\n      window.w3c_slidy.add_observer(function (slide_num) {\n        // slide_num starts at position 1\n        fireSlideChanged(null, w3c_slidy.slides[slide_num - 1]);\n      });\n    }\n\n  })();\n</script>\n\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}